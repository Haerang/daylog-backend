<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kbstar.daylog.member.model.mapper.MemberMapper">
    <select id="getAllMembers" resultType="MemberInfoRes">
        SELECT member_idx, id, password, nickname, auth_type, token, member_created_date, member_modified_date
        FROM member
    </select>

    <select id="getLoginMember" resultType="MemberInfoRes" parameterType="MemberInfoReq">
        SELECT member_idx, id, password, nickname, auth_type, token, member_created_date, member_modified_date
        FROM member
        WHERE id=#{id}
        <if test = "authType != 'kakao'">
            AND password=#{password}
        </if>
    </select>

    <select id="getMemberById" resultType="MemberInfoRes" parameterType="String">
        SELECT member_idx, id, password, nickname, auth_type, token, member_created_date, member_modified_date
        FROM member
        WHERE id = #{id}
    </select>

    <select id="findById" resultType="User" parameterType="String">
        SELECT id, password, nickname
        FROM member
        WHERE id = #{id}
    </select>

    <select id="getMemberByIdx" resultType="MemberInfoRes" parameterType="int">
        SELECT member_idx, id, password, nickname, auth_type, token, member_created_date, member_modified_date
        FROM member
        WHERE member_idx = #{memberIdx}
    </select>

    <update id="updateToken" parameterType="MemberInfoReq">
        UPDATE member
        SET token = #{token}
        WHERE member_idx = #{idx}
    </update>

    <insert id="insertMember" parameterType="MemberInfoReq" useGeneratedKeys="true" keyProperty="idx" keyColumn="member_idx">
        INSERT INTO member(id, password, nickname, auth_type, token, member_created_date)
        VALUES (#{id}, #{password}, #{nickname}, #{authType}, #{token}, now())
    </insert>

    <update id="updateMember" parameterType="MemberInfoReq">
        UPDATE member
        SET password = #{password},
            nickname = #{nickname},
            member_modified_date = now()
        WHERE member_idx = #{idx}
    </update>

    <delete id="deleteMember" parameterType="int">
        DELETE FROM member WHERE member_idx = #{memberIdx}
    </delete>

</mapper>